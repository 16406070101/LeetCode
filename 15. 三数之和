//给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元////组。

//注意：答案中不可以包含重复的三元组。

//例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

//满足要求的三元组集合为：
//[
//  [-1, 0, 1],
//  [-1, -1, 2]
//]





class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        int n = nums.size();
        sort(nums.begin(), nums.end());   //排序，从小到大
        for(int i = 0 ; i < n - 2; i ++){
            int j = i + 1;                //双指针，缩小范围
            int k = n - 1;
            while(j < k){
                if(nums[i] + nums[j] + nums[k] > 0){
                     k --; 
                 }
                 else if(nums[i] + nums[j] + nums[k] < 0){
                     j ++;
                 }
                 else{
                     ans.push_back({nums[i], nums[j], nums[k]});
                     while(j+1<=n-1&&nums[j+1] == nums[j])   j++; //进行去重
                     j++;
                 }
            }
            while(i+1<=n-1&&nums[i+1] == nums[i])   i++;     //进行去重
        }
    
        return ans;
    }

};

