输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/unique-binary-search-trees
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。



class Solution {
public:
    int numTrees(int n) {
        if(n<1){
            return 0;
        }
        int dp[n+1]={0};//dp[i]存放前i个数做树顶时，一共有多少个树
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=n;i++){
            for(int j=1;j<=i;j++){//分别以第J个数为树顶,dp[j-1]表示左子树的个数，dp[i-j]为右面右子树的个数
                dp[i]+=dp[j-1]*dp[i-j];
            }
        }
         
         return dp[n];
    }
};
