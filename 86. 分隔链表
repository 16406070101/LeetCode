给定一个链表和一个特定值 x，对链表进行分隔，使得所有小于 x 的节点都在大于或等于 x 的节点之前。

你应当保留两个分区中每个节点的初始相对位置。

示例:

输入: head = 1->4->3->2->5->2, x = 3
输出: 1->2->2->4->3->5


//下面的方法利用头插法，但是没有保留相对的位置，但是我觉得也是一种思路，但如果单纯要过这个题的话，还是看下一段代码😂。

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode * newhead=new ListNode(0);
        newhead->next=head;
        if(head==NULL||head->next==NULL){
            return head;
        }
        ListNode * tmp=head->next;
        ListNode * pre=head;
        while(tmp){
            if(tmp->val<x){
                pre->next=tmp->next;
                newhead->next=tmp;
                ListNode * tmpnext=tmp->next;
                tmp->next=head;
                head=tmp;
                tmp=tmpnext;
            }else{
                pre=tmp;
                tmp=tmp->next;
            }
        }
        return newhead->next;
        
    }
};
