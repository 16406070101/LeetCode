合并 k 个排序链表，返回合并后的排序链表。请分析和描述算法的复杂度。

示例:

输入:
[
  1->4->5,
  1->3->4,
  2->6
]
输出: 1->1->2->3->4->4->5->6

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/merge-k-sorted-lists
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
            priority_queue <int ,vector<int> ,greater<int> > p;//构建一个最小堆
            ListNode * newhead=new ListNode(0);                 //为了统一操作，假设一个结点，作为新链表头结点的前一个结点
            int size=lists.size();
            for(int i=0;i<size;i++){                            //把所有元素放入最小堆中
                ListNode * tmp=lists[i];
                while(tmp){
                    p.push(tmp->val);
                    tmp=tmp->next;
                }
            } 
            ListNode * tmp=newhead;
            while(!p.empty()){                                  //从最小堆中取出元素，连成新的链表
                tmp->next=new ListNode(p.top());
                p.pop();
                tmp=tmp->next;

            }
            return newhead->next;

    }
};
