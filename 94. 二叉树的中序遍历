给定一个二叉树，返回它的中序 遍历。

示例:

输入: [1,null,2,3]
   1
    \
     2
    /
   3

输出: [1,3,2]
进阶: 递归算法很简单，你可以通过迭代算法完成吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/binary-tree-inorder-traversal
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//递归法
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int >  arr;
        inorderTraversal(root,arr);
        return arr;
    }
    void inorderTraversal(TreeNode* root,vector<int > &arr){
        if(root==NULL){   //返回条件
            return ;
        }
        inorderTraversal(root->left,arr);//遍历左子树
        arr.push_back(root->val);        //输出根节点
        inorderTraversal(root->right,arr);//遍历右子树
    }
};
