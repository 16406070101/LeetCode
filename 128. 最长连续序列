给定一个未排序的整数数组，找出最长连续序列的长度。

要求算法的时间复杂度为 O(n)。

示例:

输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/longest-consecutive-sequence
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


class Solution {
public:
	int longestConsecutive(vector<int>& nums) {
		unordered_set<int> s(nums.begin(), nums.end());
        unordered_set<int> begin;//记录起点
		int maxLen = 0;
		//从每个连续序列的第一个数开始计数
		for (int num:nums) {
			if (s.count(num - 1)||begin.count(num)){}//如果之前的数存在，或这个数字本身就是之前计算过数列的起点，则包含这个数字的序列已经被计算过
			else{//是第一个数字
                begin.insert(num);
				int len = 1;
				while (s.count(num+1))
				{
					num++;
					len++;
				}
				maxLen = max(maxLen, len);
			}
		}
		return maxLen;
	}
};
