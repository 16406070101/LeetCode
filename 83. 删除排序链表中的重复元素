给定一个排序链表，删除所有重复的元素，使得每个元素只出现一次。

示例 1:

输入: 1->1->2
输出: 1->2
示例 2:

输入: 1->1->2->3->3
输出: 1->2->3

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode * tmp=head;
        if(head==NULL||head->next==NULL){
            return head;
        }
        while(tmp&&tmp->next){
            if(tmp->val==tmp->next->val){ //当遇到一个结点的时候，一路向后看是否有和它值相同的结点，有则删掉
                tmp->next=tmp->next->next;
            }else{                        //如果这个结点的下个结点与这个结点不同，那么这个结点就没有神魔重复，我们将指针后移，进行下一个结点的判断
                tmp=tmp->next;
            }
        }
        return head;

    }
};
